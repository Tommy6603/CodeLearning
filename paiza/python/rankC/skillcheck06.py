"""
あなたはみかん農園を営んでいます。

収穫の季節になると、あなたはみかんを収穫し、重さごとに仕分けなければいけません。

仕分け作業は非常に時間がかかる作業なので、あなたはみかんを重さごとに仕分けてくれるプログラムを書くことにしました。

みかんはある定数 N の倍数のうち、正の整数の重さが書かれた箱に仕分けられます。

例えば N = 10 の時、10 g, 20 g, 30 g ... のように仕分けられます。

そして、そのみかんの重さが一番近い数の重さに仕分けられます。
重さが一番近い箱が複数ある場合、数が大きい方の箱に仕分けられます。

入力例 1 は以下のようになります。

・24 g のみかんはより値の近い 20 g と書かれた箱に仕分けられます。
・35 g のみかんは 30 g, 40 g の箱と差が同じです。この場合は数の大きい方の 40 g の箱へ仕分けてください。
・0g に仕分けられることはないので、一番小さい重さに仕分けてください。

入力される値
入力は以下のフォーマットで与えられます。

N M
w_1
w_2
...
w_M

・ 1 行目にそれぞれ仕分ける重さの区切りを表す整数、みかんの個数を表す整数 N, M がこの順で半角スペース区切りで与えられます。
・ 続く M 行のうちの i 行目 (1 ≦ i ≦ M) には、i 番目のみかんの重さを表す整数 w_i が与えられます。
・ 入力は合計で M + 1 行となり、入力値最終行の末尾に改行が １ つ入ります。
入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。

期待する出力
仕分けるべき重さを以下の形式で出力してください。

y_1
y_2
...
y_M

・ 期待する出力は M 行からなります。
・ i 行目 (1 ≦ i ≦ M) にはそれぞれ i 番目のみかんの仕分け先の重さを表す y_i を出力して下さい。
・ すべて整数で出力してください。
・ 出力最終行の末尾に改行を入れ、余計な文字、空行を含んではいけません。

条件
すべてのテストケースにおいて、以下の条件をみたします。
・ 1 ≦ N ≦ 100
・ 1 ≦ M ≦ 10
・ 1 ≦ w_i ≦ 1,000 (1 ≦ i ≦ M)

"""

import sys

def sort_mikan(N, weights):
    results = []
    for weight in weights:
        nearest = round(weight / N) * N #一桁目を四捨五入
        if nearest == 0 :# 例外処理(Weight <5)
            results.append(nearest + N)
        else : 
            results.append(nearest) # 通常処理
    return results

# 入力データの処理
input = sys.stdin.read

data = input().split()
N = int(data[0])
M = int(data[1])
weights = list(map(int, data[2:2+M])) #みかんの重さをintにし、リスト化

# みかんの重量に基づいて仕分け先を計算
sorted_weights = sort_mikan(N, weights)

# 結果の出力
for weight in sorted_weights:
    print(weight)

