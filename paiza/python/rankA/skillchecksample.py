"""
あなたはこれから友人と N 回じゃんけんをします。しかし、あなたは全てを見通す千里眼の持ち主なので、友人がこれから出す N 回のじゃんけんの手が全て分かってしまいました。

ただただ全勝してしまうのは面白くないので、あなたは、N 回のじゃんけんで出した指の本数の合計がちょうど M 本になるようにじゃんけんをすることにしました。
このとき、あなたは最高で何回じゃんけんに勝つことができるでしょうか。


ここで、上の文中に出てくる「出した指の本数」というのは、じゃんけんで出した手の何本の指が立っていたか、ということであり、グー、チョキ、パーそれぞれ
・グー　のとき ... 0 本
・チョキのとき ... 2 本
・パー　のとき ... 5 本
の指を出していたということになります。

例えば、あなたが 4 回のじゃんけんで グー、パー、チョキ、グー と出したとすると、出した指の本数の合計は、
0 + 5 + 2 + 0 = 7
で 7 本となります。

入力される値
入力は以下のフォーマットで与えられます。
N M
s

1 行目にそれぞれじゃんけんを行う回数を表す整数 N、あなたが出す指の本数の合計を表す整数 M がこの順で半角スペース区切りで与えられます。
続いて 2 行目に長さ N の文字列 s が与えられます。s の i 番目 (1 ≦ i ≦ N) の文字は i 回目のじゃんけんで相手が出す手を表し、それぞれグーが "G"、チョキが "C"、パーが "P" で表されます。
入力は合計で 2 行となり、2 行目の末尾に改行が 1 つ入ります。
入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 

期待する出力
あなたの勝つ回数の最大値を整数で出力してください。

条件
すべてのテストケースにおいて、以下の条件をみたします。
・1 ≦ N ≦ 1,000
・0 ≦ M ≦ 5,000
・s_i (1 ≦ i ≦ N) は半角英大文字で "G", "C", "P" のいずれかである。
・N 回のじゃんけんでちょうど M 本の指を出すじゃんけんの仕方が少なくとも 1 通り存在する。

入力例1
4 7
CGPC

出力例1
4

入力例2
5 10
GPCPC

出力例2
3
"""

def max_wins_with_exact_fingers(N, M, s):
    # 相手の手に対して、出すべき手の指の本数と勝利の有無を定義
    beat = {'G': (5, 1), 'C': (0, 1), 'P': (2, 1)}  # (fingers, win?)
    not_beat = {'G': (0, 0), 'C': (2, 0), 'P': (5, 0)}
    
    # DPテーブルの初期化 (j本の指を出す最大勝利数を記録)
    # dp[i][j] : i回目まででj本の指を出した時の最大勝利数
    dp = [[-float('inf')] * (M + 1) for _ in range(N + 1)]
    dp[0][0] = 0  # 0回目までで0本の指を出した時の勝利数は0
    
    # DPの更新
    for i in range(1, N + 1):
        op_hand = s[i-1]  # 相手のi回目の手
        win_fingers, win = beat[op_hand]
        not_win_fingers, not_win = not_beat[op_hand]
        
        for j in range(M + 1):
            if j >= win_fingers and dp[i-1][j - win_fingers] != -float('inf'):
                # 勝つ手を選ぶ場合
                dp[i][j] = max(dp[i][j], dp[i-1][j - win_fingers] + win)
            if j >= not_win_fingers and dp[i-1][j - not_win_fingers] != -float('inf'):
                # 勝たない手を選ぶ場合
                dp[i][j] = max(dp[i][j], dp[i-1][j - not_win_fingers] + not_win)
    
    # 最大勝利数を求める
    return max(dp[N][j] for j in range(M + 1) if dp[N][j] != -float('inf'))

# 標準入力の受け取り
import sys
input = sys.stdin.read
data = input().split()
N = int(data[0])
M = int(data[1])
s = data[2]

# 結果の出力
print(max_wins_with_exact_fingers(N, M, s))
